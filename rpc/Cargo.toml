[package]
name = "workflow-rpc"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true
keywords = ["websocket","rpc","wasm","browser"]
categories = ["web-programming::websocket","web-programming::http-client"]
exclude = ["/.*", "/test"]
description = """
Workflow RPC (wRPC) framework based on the `workflow-websocket` 
crate offering native & in-browser clients as well as a 
native-only server based on `tokio` & `tungstenite`. wRPC
supports custom `borsh` and `JSON` protocols with heavy
use of generics and derive-based borsh and serde serializers.
"""

[lib]
crate-type = ["cdylib", "lib"]

[dependencies]
ahash.workspace = true
async-std.workspace = true
async-trait.workspace = true
borsh.workspace = true
downcast-rs.workspace = true
futures.workspace = true
manual_future.workspace = true
rand.workspace = true
serde_json.workspace = true
serde.workspace = true
thiserror.workspace = true
wasm-bindgen.workspace = true
workflow-core.workspace = true
workflow-log.workspace = true
workflow-rpc-macros.workspace = true
workflow-websocket.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
futures-util.workspace = true
tokio.workspace = true
tungstenite.workspace = true
